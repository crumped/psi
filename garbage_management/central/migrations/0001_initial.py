# Generated by Django 3.1.3 on 2020-11-24 15:45

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CarGps',
            fields=[
                ('id_car_gps', models.AutoField(primary_key=True, serialize=False)),
                ('position', models.TextField(blank=True, null=True)),
                ('date_create', models.DateTimeField()),
            ],
            options={
                'db_table': 'car_gps',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cars',
            fields=[
                ('id_cars', models.AutoField(primary_key=True, serialize=False)),
                ('number_plate', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'cars',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CarStops',
            fields=[
                ('id_car_stops', models.AutoField(primary_key=True, serialize=False)),
                ('order', models.IntegerField(blank=True, null=True)),
                ('arrival_date', models.DateTimeField(blank=True, null=True)),
                ('is_done', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'car_stops',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CarType',
            fields=[
                ('id_car_type', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'car_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GarbageDump',
            fields=[
                ('id_garbage_dump', models.AutoField(primary_key=True, serialize=False)),
                ('address_gps', models.TextField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'garbage_dump',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportProblem',
            fields=[
                ('id_report_problem', models.AutoField(primary_key=True, serialize=False)),
                ('type_of_report', models.CharField(blank=True, max_length=45, null=True)),
                ('date_reported', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'report_problem',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrashBin',
            fields=[
                ('id_trash_bin', models.AutoField(primary_key=True, serialize=False)),
                ('bin_capacity', models.CharField(blank=True, max_length=45, null=True)),
                ('bin_type', models.CharField(blank=True, max_length=45, null=True)),
                ('address', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'trash_bin',
                'managed': False,
            },
        ),
    ]
